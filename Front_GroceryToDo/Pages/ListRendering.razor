@using Front_GroceryToDo.Models
@using Front_GroceryToDo.Data.impl
@using Front_GroceryToDo.Data
@inject IRecordsService RecordsService

@if (!Items.Any())
{
    <p>
        <em>The list is empty.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th></th>
            <th>id</th>
            <th>name</th>
            <th>quantity</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Items)
        {
            <tr>
                <td>
                    <button @onclick="() => CompleteChange(item)">@buttonName</button>
                </td>
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Quantity</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    private string buttonName { get; set; }

    [Parameter]
    public List<Item> Items { get; set; }


    protected override void OnInitialized()
    {
        buttonName = Items[0].IsCompleted ? "Incomplete" : "Complete";
    }

    private async Task CompleteChange(Item item)
    {
        //
    }

}